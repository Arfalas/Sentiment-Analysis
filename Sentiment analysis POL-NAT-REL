
txtfile = open("C:/Users/No Name/OneDrive/Desktop/Random.txt", "r", encoding="utf_8")
datazero = txtfile.read()
data = datazero.casefold()

from string import digits

def remove_numbers_punctuation(self):
    data1 = self.replace(',', '')
    data2 = data1.replace('.', '')
    data3 = data2.replace(':', '')
    data4 = data3.replace("'", '')
    data5 = data4.replace('?', '')
    data6 = data5.replace('!', '')
    data7 = data6.replace('"', '')
    data8 = data7.replace('-', '')
    data9 = data8.replace('(', '')
    data10 = data9.replace(')', '')
    remove_number = str.maketrans('', '', digits)
    numberless_string = data10.translate(remove_number)
    text_List = numberless_string.split()
    return text_List

remove_numbers_punctuation(data)

def Remove_words(list1, stop_words):
    for word in list(list1):
        if word in stop_words:
            list1.remove(word)
    return list1
stop_word_str=open('C:/Users/No Name/OneDrive/Desktop/Projects/Stop Words BCS Final.txt', 'r', encoding='utf_8')
stop_word=stop_word_str.read()
stop_wordList=stop_word.split()
#print(stop_wordList)
pure_txt=Remove_words(remove_numbers_punctuation(data), stop_wordList)
print(pure_txt)

#The final result is a list without punctuation, numbers and stop-words.

#the next line makes separate lists from individual sentences in the string
#txt_array = [line.split() for line in remove_punctuation(data).splitlines()]

'''
 I could make list matrixes to include several sentences/lists as a specific article. Nested lists would therefore be a whole article.
l1 = [a, b, c]
l2 = [d, e, f]
l12 = [l1,l2]
'''
# the following code calculates the median value of all dictionary elements (it calculates only the values)
'''test_dict = {"I" : 0, "love" : 1, "and" : 0, "adore" : 1, "cookies" : 0}
 
print("The original dictionary is : " + str(test_dict))
 
# calculates the median velue of the dictionary 
res = sum(test_dict.values()) / len(test_dict)

if res > 0: 
    print('The sentiment is positive')
else: 
    print('The sentiment is negative')'''


my_list = ['Communists', 'are', 'an', 'evil', 'force', 'that', 'needs', 'to', 'be', 'destroyed']
sent_analysis = {values: 0 for values in my_list}
def changeValues(self):
    for key, value in self.items():
        if value == 0:
            if key == 'evil':
                self[key] = 1
        if value == 0:
            if key == 'destroyed':
                self[key] = 1
# if a value from the loop is not present in the dict then the loop will not change or add dict elements
        if value == 0:
            if key == 'mare':
                self[key] = 1
    print(self)
changeValues(sent_analysis)
